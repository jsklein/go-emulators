package main
import (
    "fmt" 
    "net"  
    "reflect"
)


func sendResponse(conn *net.UDPConn, addr *net.UDPAddr) {
    response := "\xA1\x3C\x83\x80\x00\x01\x00\x15\x00\x00\x00\x01\x04\x63\x70\x73\x63\x03\x67\x6F\x76\x00\x00\xFF\x00\x01\xC0\x0C\x00\x02\x00\x01\x00\x00\x0C\x88\x00\x12\x06\x61\x75\x74\x68\x30\x30\x02\x6E\x73\x02\x75\x75\x03\x6E\x65\x74\x00\xC0\x0C\x00\x02\x00\x01\x00\x00\x0C\x88\x00\x09\x06\x61\x75\x74\x68\x36\x31\xC0\x2D\xC0\x0C\x00\x0F\x00\x01\x00\x00\x0C\x88\x00\x0B\x00\x05\x06\x68\x6F\x72\x6D\x65\x6C\xC0\x0C\xC0\x0C\x00\x0F\x00\x01\x00\x00\x0C\x88\x00\x0A\x00\x05\x05\x73\x74\x61\x67\x67\xC0\x0C\xC0\x0C\x00\x10\x00\x01\x00\x00\x0C\x88\x00\x51\x50\x76\x3D\x73\x70\x66\x31\x20\x69\x70\x34\x3A\x36\x33\x2E\x37\x34\x2E\x31\x30\x39\x2E\x36\x20\x69\x70\x34\x3A\x36\x33\x2E\x37\x34\x2E\x31\x30\x39\x2E\x31\x30\x20\x69\x70\x34\x3A\x36\x33\x2E\x37\x34\x2E\x31\x30\x39\x2E\x32\x30\x20\x6D\x78\x20\x61\x3A\x6C\x69\x73\x74\x2E\x63\x70\x73\x63\x2E\x67\x6F\x76\x20\x2D\x61\x6C\x6C\xC0\x0C\x00\x01\x00\x01\x00\x00\x0C\x88\x00\x04\x3F\x4A\x6D\x02\xC0\x0C\x00\x1C\x00\x01\x00\x00\x0C\x88\x00\x10\x26\x00\x08\x03\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\xC0\x0C\x00\x30\x00\x01\x00\x00\x0C\x88\x01\x08\x01\x01\x03\x07\x03\x01\x00\x01\x75\x6D\xF8\xBA\xBA\x07\x40\xD5\xC0\x00\x0C\x2E\x46\xFD\x92\x59\xAC\xFB\xA8\xB6\x96\x4D\xE8\xAD\x54\x01\x19\x3C\x34\x0D\x7B\x11\xC3\x56\xF5\x3F\x55\x7D\x01\xEB\x85\xFD\x17\xCA\x5A\xB7\x5D\xDE\x01\x65\x3D\x72\x44\x1A\x0B\x60\x84\xCE\xCA\xE9\x82\xB8\x5D\x71\x53\xD7\x75\x19\x49\x6C\x63\x2E\x50\x6D\xA2\x45\x0F\x42\x41\x73\xCF\xAE\x8A\x98\x21\xB4\xE8\x38\xF9\xE5\xF6\x0B\xD8\x77\x7A\x6B\x00\xE9\xDD\x8D\x48\xBC\x43\x40\xCB\x87\x1E\x73\xFF\x62\x6D\x6F\x0C\x43\x46\x2E\x8F\x34\xF0\xCE\xFA\x6B\xCE\xC7\x5B\x23\x35\x49\xF1\x3A\x4B\xFE\x4C\x88\x59\xC4\x83\x94\xB6\xFD\x3A\xCF\xB7\x58\x17\x0F\x1D\xA2\x9A\x16\x2B\xE1\x0C\x77\xEB\x6D\xF6\x22\x2F\x1B\x82\x19\x48\xAC\xDE\x4A\xF0\x13\x92\xE1\x8D\xA6\x31\x49\xA4\x29\x9D\xA9\x6A\x62\x9B\x0D\x40\x2E\xD5\xD8\x4D\x6C\x78\x74\xA7\x8C\xB8\x3C\x70\xEE\x49\x74\xE0\xF8\xAB\x73\x2D\x9C\xBD\x9D\x60\xFD\x8E\xA0\x4A\x19\xF8\xF8\xFB\x17\x5A\x5F\x18\x1D\x0E\xF4\x93\xD6\x96\x89\xEB\x89\x24\xBB\xEB\x1C\x4E\xB7\x0A\xD8\xD5\x00\xB2\xB1\x9B\xBD\x0C\x91\x10\x5A\x05\x61\x12\x08\x0D\x74\xEC\x07\x64\x89\xC0\x0C\x00\x30\x00\x01\x00\x00\x0C\x88\x01\x08\x01\x01\x03\x07\x03\x01\x00\x01\x92\x58\xE5\xD2\x00\x9B\xC4\x2C\x33\x6B\x01\x06\xC3\xA8\x62\x47\x8C\x86\x4D\x6C\x50\x70\x6A\x30\xE0\x25\xC5\x0F\x15\x06\x1A\x15\x36\x80\xCD\xD2\xF5\x73\x3A\x92\xC0\x19\x54\xC4\x4E\x1C\xEF\x3A\x59\x4B\x5F\x65\xB1\x0A\x99\x14\xF0\x02\xA2\xA0\xEE\x25\xD7\xCF\x11\x8C\x17\xF9\xC2\x3B\x3F\x02\x3D\xA2\xD6\xE2\x3C\x40\x8C\xA1\x68\xCC\x59\x4B\xF8\x9F\x5A\x04\x78\x6C\x10\x38\x77\x83\x60\x18\x3A\x47\x64\x49\x6B\xD0\x29\xF6\x3A\x50\xC9\xC2\x11\x84\x34\xEA\xFD\x93\x18\x60\x0D\x74\xFD\xED\x45\x67\x23\x61\x7B\x26\x9B\x50\x66\x07\x80\x22\x51\xA8\xC1\x53\xCC\x52\x94\xB3\xE2\xFE\xB5\xD2\xE7\xB2\x3A\x06\x16\x35\x83\x74\xDF\xE2\x22\xB5\x83\x96\x1C\xC0\xC1\x9B\x8B\x77\xA1\x88\x6B\x08\xA9\xEA\x3E\xE6\xAE\x1B\x5A\x2E\x95\x64\xBD\xCB\x97\x9A\x60\xD4\x7C\xDA\x3F\xD6\x9C\x2C\xC0\x2B\xF8\x1B\xE5\x74\xDC\x1E\x2D\x36\x24\x1F\x7C\x3E\x20\x17\x50\xEE\xFE\x08\xD8\xE2\xF5\x94\x6D\xFF\x21\x43\xAA\x9A\x20\xA0\xA8\x77\xA2\xAB\xC4\x0B\xE9\x4F\x34\x03\xFD\x09\x9F\xC3\xB9\x4A\x7E\x44\x32\xF8\xD6\x69\xB9\xBC\xAB\xE9\x17\xD8\x1E\x22\xAE\x57\x18\x51\xC0\x0C\x00\x30\x00\x01\x00\x00\x0C\x88\x01\x08\x01\x00\x03\x07\x03\x01\x00\x01\x76\xFA\xE3\xEA\x5F\x03\x74\x35\x93\x79\xE9\x1C\xAE\x90\xE0\x34\x4F\x72\x8F\x5D\x3E\x92\xD6\x72\x56\xA6\x1E\x45\xB9\x81\x78\x28\x91\x93\x43\x86\xB3\x53\x1C\xBC\x01\x07\x43\xD8\xEC\x29\x36\xE6\x22\xFF\xCA\xAB\x29\x82\x8C\x5F\xCD\xE6\x02\xFE\x9C\x02\x67\xEB\x1B\x49\x84\x0D\x97\x50\x01\x4B\x94\x18\x54\x77\x23\x3F\x77\x03\x32\xB0\x71\x56\x33\x16\xBF\xFA\x89\x16\x7B\x2A\x36\x3D\x33\x6C\xFE\xAD\xA9\x37\x13\xB6\xCA\x28\x28\x14\xD5\x63\x22\x8A\xAC\xE1\x59\xD5\x26\x60\x6B\xB7\x08\x1E\x4E\x67\x29\xDA\x93\x15\x9D\xE4\xD4\x64\x9D\xCA\x5F\x9D\x26\xDB\x2D\xE0\x86\x54\x3D\xC2\x3D\x84\xFE\x32\x49\xB7\x89\x2C\x1A\x0A\x12\xFF\xE5\xB4\xD8\x7D\xF2\x0C\x8D\xEE\x45\x7D\x68\xF1\x97\x67\x8F\xD7\xD3\x01\xF2\x7B\x0E\xF7\xA4\x34\x15\xCC\xE5\x97\x4D\x20\xC4\x47\x2C\x12\xC1\xCD\x37\x8C\xB8\x6C\xEC\xA1\x85\x17\xFB\x0F\xF2\x61\xEC\x29\x77\xF8\x0F\x68\x5A\xCB\x18\xFC\x9C\x6C\xA9\x64\x7D\x73\xD9\xB6\xF7\x2E\x5E\x20\xD7\xA8\x6F\xE8\x1A\x22\x90\x19\xF2\x43\xCC\x64\x3A\x44\xDE\xD2\xA3\xF4\x50\xD2\xDA\x93\xE7\xC0\xE2\x45\xB6\x41\xF4\x45\x01\x55\xC0\x0C\x00\x30\x00\x01\x00\x00\x0C\x88\x01\x08\x01\x00\x03\x07\x03\x01\x00\x01\x9E\xBF\x4F\x35\xAD\x4B\x5B\xC6\x75\xEE\x63\x9A\xF6\xDC\x1B\x61\x15\xE3\x52\x3A\xC5\xCA\x98\xCC\xA7\xC9\xDB\x4C\x31\xEE\x24\x1A\x0A\xEE\x71\x39\xF4\xDC\x10\xEA\x4E\x57\x06\x16\x79\xEB\xAF\x60\x8B\x83\xBE\xC9\x6A\x1F\xFC\x0E\xD5\x03\x0E\xD4\xB1\x46\xAB\xCC\x98\x20\x52\x4D\x35\xF2\x89\x8F\xA9\xAF\x6D\xA8\x35\x18\xA6\x05\xD5\x8C\xE6\xAB\xF2\x05\x6A\x47\x86\xD9\x52\xCC\xDB\x54\x68\x37\xCD\x39\x83\xB8\x49\x30\x23\x96\x45\x84\x18\x14\xB2\x7D\xF7\x0B\xDA\x7E\x06\xBF\xA6\x3F\xE4\x19\x6C\xF2\xDD\xD5\xD3\xE6\x99\x8B\xD3\x3C\xDE\x86\xC7\x3B\xC8\xA1\xF9\xA9\x61\x11\x39\x52\xDB\x27\x73\x69\xD8\x6A\xEA\xD4\x6B\x83\x02\x24\x3C\xFE\x23\x6D\x23\x93\x91\x65\x1B\x1B\x96\xAE\x36\xC4\xF9\xA9\x63\x35\xB5\x77\xCD\x84\x2F\xDD\x01\x70\xA8\x97\xF4\x02\x8A\x25\x92\x77\xF0\x5C\xC0\xD0\xEA\x60\x37\xB4\xDD\xA4\x35\xD2\x2E\xE8\x84\xE0\xD9\xCA\x62\x8F\xCF\xAF\x63\xBD\x5B\x8F\xB2\x89\x92\x3F\xA0\x67\x51\xC7\xB3\x38\x93\x71\x2C\xCC\x39\xEC\xF0\x7D\xE2\x8B\x62\x3C\x1B\x04\xCC\x46\x4F\x16\x63\x3A\x5B\x4F\x63\x64\x9A\x99\x7E\x8A\x59\x9E\x33\x8B\xC0\x0C\x00\x33\x00\x01\x00\x00\x0C\x88\x00\x09\x01\x00\x00\x0C\x04\xAA\xBB\xCC\xDD\xC0\x0C\x00\x2E\x00\x01\x00\x00\x0C\x88\x01\x1C\x00\x02\x07\x02\x00\x00\x54\x60\x56\x3D\x6A\x14\x56\x34\x21\x84\xD1\x15\x04\x63\x70\x73\x63\x03\x67\x6F\x76\x00\x41\x1F\x32\x79\x99\xFF\x53\xD1\x40\x4A\x87\x6F\x34\x1F\xDD\x88\x03\xD3\x4A\x55\x13\xC5\xB6\x34\x88\xA7\x07\x88\x74\xBB\xAB\x9C\xF0\xC2\x00\x00\x00\x00\x00\x00"
    _,err := conn.WriteToUDP([]byte(response), addr)
    // fmt.Printf("Success")
    if err != nil {
        fmt.Printf("Couldn't send response %v", err)
    }
}


func main() {
    p := make([]byte, 2048)
    addr := net.UDPAddr{
        Port: 5353,
        IP: net.ParseIP("0.0.0.0"),
    }
    ser, err := net.ListenUDP("udp", &addr)
    if err != nil {
        fmt.Printf("Some error %v\n", err)
        return
    }
    for {
        _,remoteaddr,err := ser.ReadFromUDP(p)
        // fmt.Printf("Read a message from %v %s \n", remoteaddr, p)
	h := "\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x09\x5F\x73\x65\x72\x76\x69\x63\x65\x73\x07\x5F\x64\x6E\x73\x2D\x73\x64\x04\x5F\x75\x64\x70\x05\x6C\x6F\x63\x61\x6C\x00\x00\x0C\x00\x01"
        m := []byte(h)
	pp := []byte(p)[0:46]
	if reflect.DeepEqual(pp, m) {
		go sendResponse(ser, remoteaddr)	
		}
	// fmt.Println(pp,m)
	if err !=  nil {
            fmt.Printf("Some error  %v", err)
            continue
        }
        continue
      }
}
