package main
import (
    "fmt" 
    "net"  
    "reflect"
)


func sendResponse(conn *net.UDPConn, addr *net.UDPAddr) {   
    response := "\x87\xB5\x83\x80\x00\x01\x00\x15\x00\x00\x00\x01\x04\x63\x70\x73\x63\x03\x67\x6F\x76\x00\x00\xFF\x00\x01\xC0\x0C\x00\x2E\x00\x01\x00\x00\x07\xA6\x01\x1C\x00\x0F\x07\x02\x00\x00\x54\x60\x56\x47\xF6\x10\x56\x3E\xAD\x80\xF5\x1C\x04\x63\x70\x73\x63\x03\x67\x6F\x76\x00\x1B\x1F\xF1\x8A\x10\x81\xDE\x55\xD3\xCC\x6D\xA5\x6C\xFF\xC1\x85\x8F\x13\x73\xB7\xDE\x09\xE8\xA0\x35\x76\xA6\x60\x27\x03\x8C\xB6\x96\xB2\xB9\x1F\xDB\x82\x38\xCD\xE1\xD3\x00\xC0\x72\x50\x7E\xEB\x21\xC5\xED\x0E\x8E\x97\xB7\xAD\xF1\x57\x72\xAF\x35\x8D\x37\xEC\x77\x3B\x5B\x6B\xD0\xAB\xF7\xE1\xC3\xA5\x1E\xB2\x21\x9E\x6F\x5E\x64\x6A\xBD\xBD\x9B\xCD\xF9\xE7\xA7\x25\xF9\xAD\xF8\x38\x28\x49\x73\x85\xDE\xC1\x86\xD9\xDB\x33\xB1\x1C\x0F\xE9\xBF\x86\xCC\xA7\xBA\x82\xE6\xFE\xBB\x52\xC0\x5A\x6B\xC1\x7F\x48\xCF\x20\x8F\xEF\xF7\xB9\xD2\x22\x00\x8A\x31\x52\xE5\x4B\xA9\x49\x4D\xDF\x1A\xE4\xBB\x51\x15\x90\x66\x95\xA4\x46\x5F\xAA\x09\x98\xDE\xF3\x98\x2C\xA1\x87\x1C\x5C\xD9\xA2\xCF\xBC\x9E\x59\x88\xE8\x2C\x68\x1F\xCD\x0E\x1F\x25\xE5\x85\x0C\xD6\x26\x9E\x60\xAD\x9A\xD7\x0D\x07\x8E\x8D\xEC\x7A\x96\xAD\x86\x2B\xEF\x68\x56\x09\x80\x86\x0B\x87\xDB\xC6\x10\x9F\x6E\x5C\x40\x19\x9A\xEA\x18\x85\xC5\x81\x9E\xDC\x14\xC7\x5B\x95\x3C\xBF\x51\xBD\x4D\xD1\xA8\x68\x76\xB8\x9C\x74\x4E\xB5\x3A\x31\x1B\x12\xEE\xAB\x11\x63\xCD\x21\x88\xC6\x31\xC4\x9D\xC0\x38\x00\x01\x00\x01\x00\x00\x07\xA6\x00\x04\x3F\x4A\x6D\x02\xC0\x38\x00\x2E\x00\x01\x00\x00\x07\xA6\x01\x1C\x00\x33\x07\x02\x00\x00\x54\x60\x56\x47\xF6\x10\x56\x3E\xAD\x80\xF5\x1C\x04\x63\x70\x73\x63\x03\x67\x6F\x76\x00\x1C\x19\x3C\x02\x10\x51\xB5\x07\x96\xCF\x7A\x42\x44\x53\x22\x63\x2F\x0D\xB3\x01\x07\x70\xC2\x6C\xB1\x3C\xF4\x46\xFE\x51\x7A\xDE\x9F\xC6\x86\xB0\xAE\xFB\x30\xFF\xC8\x74\xEB\x84\xD1\x1A\x6D\x83\x9E\x57\x89\x28\xF2\x91\xF6\x58\xA7\x1B\x5D\x05\x34\xB4\xE4\xD1\x17\x3F\xBB\x25\x04\x7B\x28\xC0\xBD\x2F\x27\xCB\x78\x6E\x7D\xA6\x23\xE3\xEA\x04\x7D\x28\x46\x9B\x43\x35\xAF\xC3\x63\x1D\x83\x24\x65\x6A\xF4\x04\xC1\x16\xBA\x21\xD6\xA6\x72\x19\xBF\x86\x85\x8D\xF9\xFA\xF1\xA7\x24\xB8\x3A\xB7\xE6\x50\x0B\x6A\xAE\x5E\x42\x5C\xB0\x10\xA0\x6E\x8F\xA5\x3D\x93\x66\x8F\x68\x74\x06\x10\x4C\x2B\xA6\xC7\xB4\x9B\x9B\xB3\x2C\x7C\xA7\x3D\x0D\x57\x3A\x45\xC5\xD1\x3C\x81\xC9\x57\x03\x03\xE8\xE2\x96\x71\x50\xEE\xE9\x26\xDF\x37\x2C\x9D\x5E\xD4\xFF\xD4\x89\x33\x65\x87\x1C\x15\x9C\x0D\x11\xF3\x4A\x7D\xC8\x2B\x37\x67\x32\x30\x17\x07\xAB\xA8\xFD\x82\x35\x00\x6D\x9A\x54\x31\x90\x99\x11\xDB\x95\x41\x3C\x7E\x40\x4B\xE6\xBD\x7F\x77\x6D\x26\x34\x77\x5E\xD0\x76\x63\x1B\x72\xC8\x38\xAB\x1F\x29\xC6\x52\x5F\x31\x6F\x89\x1D\x2A\x83\x1E\x9D\x99\xC3\x32\xE9\xC1\x70\x00\x2E\x00\x01\x00\x00\x07\xA6\x01\x1C\x00\x06\x07\x02\x00\x00\x54\x60\x56\x47\xF6\x10\x56\x3E\xAD\x80\xF5\x1C\x04\x63\x70\x73\x63\x03\x67\x6F\x76\x00\x55\x67\x7C\x04\x87\x6A\x2B\xBD\xE8\x4F\xF0\x26\x0E\x5A\xB7\x7A\x62\x64\x11\x37\x5A\x8F\x74\xC8\x01\x29\xEC\xE2\xE6\x6B\xBC\x4B\xCA\xC2\x90\xD2\x0E\xC4\x8E\xFC\xB7\xD8\xED\xCF\xBF\x5B\xD1\x85\x96\x1C\xC3\x27\x7E\x36\x85\x22\xB5\x38\xE3\xB9\xF4\xAF\xF0\x58\xF2\x9F\xF9\x78\x2D\xF1\xE6\xC3\x73\xDE\xC3\xBE\xFD\x98\x79\x68\x3D\x6E\x16\x70\xDE\xD0\x22\x94\x1B\x5F\x20\x7B\xFA\x46\x18\x6C\x18\x41\xE8\x01\xE5\x1E\x5F\x46\xA3\x2F\x08\xDB\xCD\x69\x53\x76\xDC\x94\x9F\x28\xFD\x1B\xC0\x39\xD0\xAF\x17\x4F\x1C\x19\xD2\x32\x4D\x0A\xA2\x44\x8D\xCD\xB5\xBC\x1A\x70\xED\xDB\x73\x2D\x75\xCA\xB7\x80\xDD\x4B\x1A\x0C\x3A\x90\x9A\xD0\x37\xAC\x63\x55\xA9\xDE\x18\x45\xE7\x0D\xAE\x9C\x43\xA5\xC5\x0C\xFE\x9A\xE4\xB8\xE9\xC8\x55\x93\x82\x37\xE0\x38\x17\xB7\x70\xCA\xED\x69\x3E\x2E\xEF\x97\x66\x19\x4D\x33\x68\x6C\xD9\x9F\x3F\x5B\x1D\x7C\x8C\x03\x23\xBE\x61\xDF\xC8\xD6\xAE\x2B\xD3\x5C\x0F\xE9\x25\xD2\xA8\x0C\x3C\xC0\xCF\xDA\x74\x26\x68\x76\x15\x85\x5B\xDD\xD7\xC3\xDB\x9F\x56\x66\x55\x8B\x0C\xC5\xA0\x5A\x66\x13\x76\xB7\xC8\x54\xFE\x2F\x2C\x39\xC2\x98\x00\x2E\x00\x01\x00\x00\x07\xA6\x01\x1C\x00\x01\x07\x02\x00\x00\x54\x60\x56\x47\xF6\x10\x56\x3E\xAD\x80\xF5\x1C\x04\x63\x70\x73\x63\x03\x67\x6F\x76\x00\x66\x90\x77\x01\x39\xF0\x16\x16\x9A\x23\xA5\x90\xD9\x22\x0D\x5F\x57\x6B\x2A\xBA\xE3\xA9\x8B\xF4\xED\x7B\xBE\x11\x17\x52\xB7\x86\x15\x5D\xE7\xEA\xA4\xC1\x00\xCD\x28\xCF\xDC\xDA\x48\x5E\xD8\x58\x74\x4B\xA2\xD6\x82\xCD\x6A\x39\xB4\x1C\x18\x83\x7E\x75\x37\x5D\x9C\xB6\xE2\x9C\x10\x23\x03\xDE\xD8\x93\xCA\xA3\xEF\x21\x9A\x0E\xB2\x8D\x4B\x0D\x53\x88\xD6\xAB\x29\xD7\xCD\x37\x07\xF2\x9B\x02\xD5\xDA\x28\xB8\xE8\xB3\x87\xFB\x52\xEA\xBE\xB9\xD2\x99\x97\x88\xE4\x7D\xFA\x4C\xF2\x5A\xF4\xE0\x5E\xC5\x88\x96\xAD\xD3\x35\x19\xA0\xAC\xA5\x8F\x3D\xB4\x5D\x73\x3A\x51\x18\x27\x34\x5D\xE9\xC9\xED\xDD\x81\x63\x41\x28\xEB\x0C\x71\x63\xD5\xA1\x72\x56\x26\x77\x1C\x0E\x4D\xBF\x56\x1C\xE5\x77\x8B\xB6\xC3\x9C\xAC\x6D\x33\x04\xC4\x86\x6B\x31\xF8\x09\xA8\x4A\xC2\x39\x9B\xBD\xD0\x66\xA3\xAA\x47\x58\x1B\x89\x96\xC1\x2F\x08\x30\xE5\xF6\xBB\x69\xEE\x84\x4F\x2A\xB8\x01\x3E\x59\xFA\xA9\xB1\x4F\x3C\x5C\x90\xE5\x1F\x71\x02\x89\x1C\x8F\x04\x7C\x99\x6D\x5D\xFA\x12\x2E\xEE\x8B\xD7\xC7\x4B\x08\xDA\xCB\x42\x2A\x5B\x2B\x68\xF0\xDF\xD2\x2F\xA2\x57\xE7\x7C\xC3\xC0\x00\x33\x00\x01\x00\x00\x07\xA6\x00\x09\x01\x00\x00\x0C\x04\xAA\xBB\xCC\xDD\xC3\xC0\x00\x0F\x00\x01\x00\x00\x07\xA6\x00\x0B\x00\x05\x06\x68\x6F\x72\x6D\x65\x6C\xC3\xC0\xC3\xC0\x00\x0F\x00\x01\x00\x00\x07\xA6\x00\x0A\x00\x05\x05\x73\x74\x61\x67\x67\xC3\xC0\xC3\xC0\x00\x2E\x00\x01\x00\x00\x07\xA6\x01\x1C\x00\x30\x07\x02\x00\x00\x54\x60\x56\x47\xF6\x10\x56\x3E\xAD\x80\x24\xD6\x04\x63\x70\x73\x63\x03\x67\x6F\x76\x00\x2C\xF3\xCD\x55\x22\x7F\x82\x0E\x03\x62\x4F\x98\x7E\xD9\xC9\x17\x71\xD6\x85\x7F\x4F\xDA\x7F\xB1\x24\x73\xAD\x4B\xF3\x1D\x09\x81\x86\x0E\x25\xB9\x19\x6A\xD2\xFF\xF3\x88\x56\x70\x1E\xB8\x73\x5B\xAF\xFC\x17\x05\x4C\xBC\xC2\xD6\xAA\xFB\x35\x2A\xA3\x6B\xA7\x29\x21\xC4\x1F\xAC\xB6\xC7\x59\x34\x6C\xD3\x4C\x65\x4F\xA7\xF3\x39\xA0\x62\x69\xFD\x8A\xDC\x31\x51\xCB\xE1\xE8\x98\x29\x74\x5D\x5F\xA0\x4F\x48\xF7\xD7\xF2\x78\x87\xDA\x86\xD7\x37\x9B\xA3\xA0\xD1\xCB\x07\x41\x43\x65\x3E\x42\xF2\x02\x62\xA9\x61\xA0\xE5\x00\x00\x25\x5B\x3F\x56\x38\x06\x00\x00\x31\x5B\x3F\x56"
    _,err := conn.WriteToUDP([]byte(response), addr)
    // fmt.Printf("Success")
    if err != nil {
        fmt.Printf("Couldn't send response %v", err)
    }
}


func main() {
    p := make([]byte, 2048)
    addr := net.UDPAddr{
        Port: 27960,
        IP: net.ParseIP("0.0.0.0"),
    }
    ser, err := net.ListenUDP("udp", &addr)
    if err != nil {
        fmt.Printf("Some error %v\n", err)
        return
    }
    for {
        _,remoteaddr,err := ser.ReadFromUDP(p)
        // fmt.Printf("Read a message from %v %s \n", remoteaddr, p)
	h := "\xff\xff\xff\xff\x67\x65\x74\x73\x74\x61\x74\x75\x73\x0a"
        m := []byte(h)
	pp := []byte(p)[0:14]
	if reflect.DeepEqual(pp, m) {
		go sendResponse(ser, remoteaddr)	
		}
	// fmt.Println(pp,m)
	if err !=  nil {
            fmt.Printf("Some error  %v", err)
            continue
        }
        continue
      }
}
